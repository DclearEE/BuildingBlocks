// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace Location
{
    public class LocationInputs: S3Args
    {
		/// <summary>
		/// The selected origin of the site.
		/// </summary>
		[JsonProperty("Origin")]
		public Elements.GeoJSON.Point Origin {get;}


        
        /// <summary>
        /// Construct a LocationInputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public LocationInputs() : base()
        {
			this.Origin = new Elements.GeoJSON.Point(new Elements.GeoJSON.Position(32.78411, -96.78204));

        }


        /// <summary>
        /// Construct a LocationInputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public LocationInputs(Elements.GeoJSON.Point origin, string bucketName, string uploadsBucket, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey): base(bucketName, uploadsBucket, modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
			this.Origin = origin;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}